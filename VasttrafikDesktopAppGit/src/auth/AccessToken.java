package auth;

import java.io.Serializable;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;

public class AccessToken implements Serializable{
	
	private String accessToken;
	private Date timeGenerated;
	private SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm");
	
	/**
	 * Creates an AccessToken instance with the provided access token String
	 * and sets a variable for when the instance was created to later be able to
	 * check if the token is still valid.	
	 * @param accessToken - A access token String generated by calling the Västrafik API.
	 */
	public AccessToken (String accessToken) {
		this.accessToken = accessToken;
		String now = dateFormat.format(Calendar.getInstance().getTime());
		try {
			this.timeGenerated = dateFormat.parse(now);
		} catch (ParseException e) {
			e.printStackTrace();
		}
	}
	
	public String accessToken() {
		return accessToken;
	}
	
	public void accessToken(String accessToken) {
		this.accessToken = accessToken;
	}
	
	public Date timeGenerated() {
		return timeGenerated;
	}
	
	/**
	 * Checks if the AccessToken instance was created more than 59 minutes ago.
	 * Used by CheckAccessToken.invalidExistingAccessToken() that checks the 
	 * accessToken.dat file to decide if a new access token should be called 
	 * for from Västtrafik.
	 * @return boolean
	 */
	public boolean oneHourSinceCreation() {		
		try {
			String now = dateFormat.format(Calendar.getInstance().getTime());
			Date dateNow = dateFormat.parse(now);
			if(dateNow.getTime() - timeGenerated.getTime()<=3540000) {
				return false;
			}else {
				return true;
			}				
		} catch (ParseException e) {			
			e.printStackTrace();
		}
			
		return true;
	}
	
}
